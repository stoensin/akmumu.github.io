---
author: admin
comments: true
date: 2012-05-26 14:35:00+00:00
layout: post
slug: '%e5%a4%9aweb%e6%9c%8d%e5%8a%a1%e5%99%a8%e4%b9%8b%e9%97%b4%e5%85%b1%e4%ba%absession%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88'
title: 多Web服务器之间共享Session的解决方案
permalink: /2012/05/26/32.html
wordpress_id: 32
categories:
- PHP
tags:
- php程序设计
---






很多**[开发](http://www.ltesting.net/html/4/category-catid-4.html)**中涉及到用户的Session验证很保留的问题，这个问题比较有意思，总结了几种方案，只供参考。











  

　　**[ 问题提出 ]**











　　为了满足足够大的应用，满足更多的客户，于是我们架设了N台Web**[服务器](http://www.ltesting.net/html/78/category-catid-378.html)**（N>=2），在多台Web服务器的情况下，我们会涉及到一个问题：用户登陆一台服务器以后，如果在跨越到另一台服务器的时候能够继续使用客户的Session？





　　（以下描述方案只是针对**[Linux](http://www.ltesting.net/html/68/category-catid-468.html)**/**[Unix](http://www.ltesting.net/html/76/category-catid-376.html)** +
 Apache + Mysql + **[PHP](http://www.ltesting.net/html/57/category-catid-157.html)**的开发架构，当然，也可以扩展到其他平台。）











  

　　**[ 问题解决方案 ]**











　　既然我们的问题已经摆在面前了，那么就要从技术角度去解决问题，给我们的客户更好的体验，总结了几个方案。





　　**1. 写客户端Cookie的方式**





　　当用户登陆成功以后，把网站域名、用户名、密码、token、session有效时间全部采用cookie的形式写入到客户端的cookie里面，如果用户从一台Web服务器跨越到另一台服务器的时候，我们的程序主动去检测客户端的cookie信息，进行判断，然后提供对应的服务，当然，如果cookie过期，或者无效，自然就不让用户继续服务了。当然，这种方法的弊端就不言而喻了，比如客户端禁用了cookie或者cookie被黑客窃取了呢？











　**　2. 服务器之间Session数据同步的方式**











　　假设Web服务器A是所有用户登陆的服务器，那么当用户验证登陆一下，session数据就会写到A服务器里，那么就可以自己写脚本或者守护进程来自动把session数据同步到其他Web服务器，那么当用户跳转到其他服务器的时候，那么session数据是一致的，自然就能够直接进行服务无须再次登陆了。缺点是，可能会速度慢，不稳定，如果是单向同步的话，登陆服务器出现问题，那么其他服务器也无法服务，当然也可以考虑双向同步的问题。











　　**3. 利用NFS共享Session数据的方式**











　　其实这个方案和下面的Mysql方案类似，只是存储方式不一样。大致就是有一台公共的NFS服务器（Network File Server）做共享服务器，所有的Web服务器登陆的时候把session数据写到这台服务器上，那么所有的session数据其实都是保存在这台NFS服务器上的，不论用户访问那太Web服务器，都要来这台服务器获取session数据，那么就能够实现共享session数据了。缺点是依赖性太强，如果NFS服务器down掉了，那么大家都无法工作了，当然，可以考虑多台NFS服务器同步的形式。  

（关于NFS的经典文章：http://linux.vbird.org/linux_server/0330nfs.php）





  

　　**4. 利用Mysql****[数据库](http://www.ltesting.net/html/61/category-catid-161.html)**共享Session数据的方式





　　这个方式与NFS的方式类似，也是采用一台Mysql服务器做共享服务器，把所有的session的数据保存到Mysql服务器上，所有Web服务器都来这台Mysql服务器来获取Session数据。缺点也是依赖性太强，Mysql无法工作了影响所有的Web服务器，当然，可以考虑多太My**[sql数据库](http://www.ltesting.net/html/18/category-catid-418.html)**来共享session，使用同步Mysql数据的方式。





　　（Mysql同步我写过文章：http://blog.csdn.net/heiyeshuwu/archive/2005/10/31/520007.aspx）











　　**5. 使用硬件设备**











　　这个算是比较成熟的解决方案了，使用类似BIG-IP的负载设备来实现资源共享，那么就能够又稳定又合理的的共享Session了。目前很多门户网站采用这种方式。缺点很明显了，就是要收费了，硬件设备肯定需要购买成本的，不过对于专业或者大型应用来讲，是比较合理并且值得的。  

（关于BIG-IP设备：http://www.f5.com.cn/channel.php?channel=product&type=BIG-IP-%D3%A6%D3%C3%C1%F7%C1%BF%B9%DC%C0%ED&id=36）











　　以上这些只是我的个人愚见，没有经过试验，不保证其准确实在性，只是提供一种想法和参考。



