---
author: admin
comments: true
date: 2012-09-21 06:06:00+00:00
layout: post
slug: '%e5%a0%86%e5%92%8c%e6%a0%88%e7%9a%84%e5%8c%ba%e5%88%ab'
title: 堆和栈的区别
wordpress_id: 73
categories:
- 操作系统
tags:
- 操作系统相关
---







堆和栈的区别




一、预备知识—程序的内存分配




一个由c/C++编译的程序占用的内存分为以下几个部分




1、栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。




2、堆区（heap） — 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收 。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表，呵呵。




3、全局区（静态区）（static）—，全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。 - 程序结束后有系统释放





4、文字常量区—常量字符串就是放在这里的。 程序结束后由系统释放




5、程序代码区—存放函数体的二进制代码。




二、例子程序 




这是一个前辈写的，非常详细 





//main.cpp 




int a = 0; 全局初始化区 





char *p1; 全局未初始化区 





main() 




{ 




int b; 栈 




char s[] = "abc"; 栈 





char *p2; 栈 




char *p3 = "123456"; 123456 null在常量区，p3在栈上。





static int c =0； 全局（静态）初始化区





p1 






